library(tidyverse)
COflights <- read_csv("COflights.csv")
# Remove non-DIA flights
DEN_flights  <- COflights %>%
filter(ORIGIN == 'DEN'| DEST=='DEN')
# function to convert from month/day to total days in year
month_day_to_days <- function(month){
if(month==1){
days = 0
} else if(month==2){
days = 31
} else if(month==3){
days = 31+28
} else if(month==4){
days = 31+28+31
} else if(month==5){
days = 31+28+31+30
} else if(month==6){
days = 31+28+31+30+31
} else if(month==7){
days = 31+28+31+30+31+30
} else if(month==8){
days = 31+28+31+30+31+30+31
} else if(month==9){
days = 31+28+31+30+31+30+31+31
} else if(month==10){
days = 31+28+31+30+31+30+31+31+30
} else if(month==11){
days = 31+28+31+30+31+30+31+31+30+31
} else {
days = 31+28+31+30+31+30+31+31+30+31+30
}
return(days)
}
# Apply function to the dataset
days <- DEN_flights %>%
mutate(day_of_year = mapply(month_day_to_days,MONTH)+DAY_OF_MONTH)
# Count total flights for all 365 days
flights_per_Day <- days %>%
group_by(day_of_year) %>%
summarise(flightcount = n())
# Count total delayed flights for 365 days
delays_per_Day <- days %>%
group_by(day_of_year) %>%
filter(ARR_DELAY >= 15) %>%
summarise(flightcount = n())
# combine above data frames into new data frame containing days and probability of delay per day
P_daily_delay <- cbind(flights_per_Day[1],(delays_per_Day[-1]/flights_per_Day[-1]))
ggplot(P_daily_delay,aes(day_of_year,flightcount))+
geom_line()+
geom_smooth(se=FALSE)+
xlab("Day of the Year (out of 365)")+
ylab("Probability of Delayed Flight")+
ggtitle("Probability of Delayed Flights throughout 2017")
by_carrier <- COflights %>%
group_by(MONTH)%>%
filter(DEST == "DEN", WEATHER_DELAY >14)%>%
summarise(count = n(), delay = mean(WEATHER_DELAY, na.rm = TRUE))
ggplot(data = by_carrier, aes(by_carrier$MONTH))+
geom_bar()
# take days mod 7 to get day of week (1st of 2017 is sunday, so remainder 1 = sunday, remainder 2 = monday etc.)
P_weekday_delay <- P_daily_delay %>%
mutate(week_day=day_of_year %% 7)
# map integers to weekday names
P_weekday_delay$week_dayname <- plyr::mapvalues(P_weekday_delay$week_day,
from = c(0,1,2,3,4,5,6),
to = c("Saturday","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday"))
ggplot(P_weekday_delay,aes(day_of_year,flightcount,color=factor(week_dayname)))+
geom_smooth(se=FALSE)+
ggtitle("Probability of a Delayed flight by Day of Week")+
ylab("Probability a Flight is Delayed")+
xlab("Day of the Year")+
scale_color_discrete("Day of the Week")
library(tidyverse)
COflights <- read_csv("COflights.csv")
# Remove non-DIA flights
DEN_flights  <- COflights %>%
filter(ORIGIN == 'DEN'| DEST=='DEN')
# function to convert from month/day to total days in year
month_day_to_days <- function(month){
if(month==1){
days = 0
} else if(month==2){
days = 31
} else if(month==3){
days = 31+28
} else if(month==4){
days = 31+28+31
} else if(month==5){
days = 31+28+31+30
} else if(month==6){
days = 31+28+31+30+31
} else if(month==7){
days = 31+28+31+30+31+30
} else if(month==8){
days = 31+28+31+30+31+30+31
} else if(month==9){
days = 31+28+31+30+31+30+31+31
} else if(month==10){
days = 31+28+31+30+31+30+31+31+30
} else if(month==11){
days = 31+28+31+30+31+30+31+31+30+31
} else {
days = 31+28+31+30+31+30+31+31+30+31+30
}
return(days)
}
# Apply function to the dataset
days <- DEN_flights %>%
mutate(day_of_year = mapply(month_day_to_days,MONTH)+DAY_OF_MONTH)
# Count total flights for all 365 days
flights_per_Day <- days %>%
group_by(day_of_year) %>%
summarise(flightcount = n())
# Count total delayed flights for 365 days
delays_per_Day <- days %>%
group_by(day_of_year) %>%
filter(ARR_DELAY >= 15) %>%
summarise(flightcount = n())
# combine above data frames into new data frame containing days and probability of delay per day
P_daily_delay <- cbind(flights_per_Day[1],(delays_per_Day[-1]/flights_per_Day[-1]))
ggplot(P_daily_delay,aes(day_of_year,flightcount))+
geom_line()+
geom_smooth(se=FALSE)+
xlab("Day of the Year (out of 365)")+
ylab("Probability of Delayed Flight")+
ggtitle("Probability of Delayed Flights throughout 2017")
by_carrier <- COflights %>%
group_by(MONTH)%>%
filter(DEST == "DEN", WEATHER_DELAY >14)%>%
summarise(count = n(), delay = mean(WEATHER_DELAY, na.rm = TRUE))
ggplot(data = by_carrier, aes(by_carrier$MONTH))+
geom_bar()
# take days mod 7 to get day of week (1st of 2017 is sunday, so remainder 1 = sunday, remainder 2 = monday etc.)
P_weekday_delay <- P_daily_delay %>%
mutate(week_day=day_of_year %% 7)
# map integers to weekday names
P_weekday_delay$week_dayname <- plyr::mapvalues(P_weekday_delay$week_day,
from = c(0,1,2,3,4,5,6),
to = c("Saturday","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday"))
ggplot(P_weekday_delay,aes(day_of_year,flightcount,color=factor(week_dayname)))+
geom_smooth(se=FALSE)+
ggtitle("Probability of a Delayed flight by Day of Week")+
ylab("Probability a Flight is Delayed")+
xlab("Day of the Year")+
scale_color_discrete("Day of the Week")
#summarize(COflights,)
# what is the probability that a flight is cancelled?
P_cancellation <- COflights %>%
filter(!is.na(CANCELLED))
# what is the probability that a flight is cancelled?
P_cancellation <- COflights %>%
filter(!is.na(CANCELLED)) %>%
summarize(COflights, total = n())
# what is the probability that a flight is cancelled?
P_cancellation <- COflights %>%
filter(!is.na(CANCELLED)) %>%
select(CANCELLED, CANCELLATION_CODE) %>%
summarize(COflights, total = n())
# what is the probability that a flight is cancelled?
P_cancellation <- COflights %>%
filter(!is.na(CANCELLED)) %>%
select(CANCELLED, CANCELLATION_CODE) #%>%
# what is the probability that a flight is cancelled?
P_cancellation <- COflights %>%
filter(!is.na(CANCELLED)) %>%
select(CANCELLED, CANCELLATION_CODE) #%>%
P_cancellation
# what is the probability that a flight is cancelled?
P_cancellation <- COflights %>%
filter(!is.na(CANCELLED), CANCELLED == 1) %>%
#select(CANCELLED, CANCELLATION_CODE) #%>%
summarize(COflights, total = n())
# what is the probability that a flight is cancelled?
P_cancellation <- COflights %>%
filter(!is.na(CANCELLED), CANCELLED == 1) %>%
#select(CANCELLED, CANCELLATION_CODE) #%>%
summarize(total = n())
P_cancellation
total_flights <- COflights %>%
filter(!is.na(CANCELLED)) %>%
summarize(total = n())
flights_c/total_flights
# flights cancelled
flights_c <- COflights %>%
filter(!is.na(CANCELLED), CANCELLED == 1) %>%
summarize(total = n())
# total flights
total_flights <- COflights %>%
filter(!is.na(CANCELLED)) %>%
summarize(total = n())
flights_c/total_flights
### what is the probability that a flight is cancelled?
# flights cancelled
flights_c <- COflights %>%
filter(!is.na(CANCELLED), CANCELLED == 1) %>%
summarize(total = n())
# total flights
total_flights <- COflights %>%
filter(!is.na(CANCELLED)) %>%
summarize(total = n())
flights_c/total_flights
flights_c/total_flights*100
### what is the probability that a flight is cancelled?
# flights cancelled
flights_c <- COflights %>%
filter(!is.na(CANCELLED), CANCELLED == 1) %>%
summarize(total = n())
# total flights
total_flights <- COflights %>%
filter(!is.na(CANCELLED)) %>%
summarize(total = n())
flights_c/total_flights
#there is a .767% probability that a flight is cancelled
### what probability is there that January flights are cancelled?
# flights cancelled
jfc <- COflights %>%
filter(MONTH == 1, !is.na(CANCELLED), CANCELLED == 1) %>%
summarize(total = n())
# total flights
total_jan <- COflights %>%
filter(MONTH == 1, !is.na(CANCELLED)) %>%
summarize(total = n())
jfc/total_jan
### what is the probability that a flight is cancelled?
# flights cancelled
flights_c <- COflights %>%
filter(!is.na(CANCELLED), CANCELLED == 1) %>%
summarize(total = n())
# total flights
total_flights <- COflights %>%
filter(!is.na(CANCELLED)) %>%
summarize(total = n())
flights_c/total_flights
#there is a .767% probability that a flight is cancelled
### what probability is there that January flights are cancelled?
# flights cancelled
jfc <- COflights %>%
filter(MONTH == 2, !is.na(CANCELLED), CANCELLED == 1) %>%
summarize(total = n())
# total flights
total_jan <- COflights %>%
filter(MONTH == 2, !is.na(CANCELLED)) %>%
summarize(total = n())
jfc/total_jan
### what is the probability that a flight is cancelled?
# flights cancelled
flights_c <- COflights %>%
filter(!is.na(CANCELLED), CANCELLED == 1) %>%
summarize(total = n())
# total flights
total_flights <- COflights %>%
filter(!is.na(CANCELLED)) %>%
summarize(total = n())
flights_c/total_flights
#there is a .767% probability that a flight is cancelled
### what probability is there that January flights are cancelled?
# flights cancelled
jfc <- COflights %>%
filter(MONTH == 3, !is.na(CANCELLED), CANCELLED == 1) %>%
summarize(total = n())
# total flights
total_jan <- COflights %>%
filter(MONTH == 3, !is.na(CANCELLED)) %>%
summarize(total = n())
jfc/total_jan
### what is the probability that a flight is cancelled?
# flights cancelled
flights_c <- COflights %>%
filter(!is.na(CANCELLED), CANCELLED == 1) %>%
summarize(total = n())
# total flights
total_flights <- COflights %>%
filter(!is.na(CANCELLED)) %>%
summarize(total = n())
flights_c/total_flights
#there is a .767% probability that a flight is cancelled
### what probability is there that January flights are cancelled?
# flights cancelled
jfc <- COflights %>%
filter(MONTH == 4, !is.na(CANCELLED), CANCELLED == 1) %>%
summarize(total = n())
# total flights
total_jan <- COflights %>%
filter(MONTH == 4, !is.na(CANCELLED)) %>%
summarize(total = n())
jfc/total_jan
### what probability is there that January flights are cancelled?
# flights cancelled
jfc <- COflights %>%
filter(MONTH == 5, !is.na(CANCELLED), CANCELLED == 1) %>%
summarize(total = n())
# total flights
total_jan <- COflights %>%
filter(MONTH == 5, !is.na(CANCELLED)) %>%
summarize(total = n())
jfc/total_jan
### what probability is there that January flights are cancelled?
# flights cancelled
jfc <- COflights %>%
filter(MONTH == 6, !is.na(CANCELLED), CANCELLED == 1) %>%
summarize(total = n())
# total flights
total_jan <- COflights %>%
filter(MONTH == 6, !is.na(CANCELLED)) %>%
summarize(total = n())
jfc/total_jan
### what probability is there that January flights are cancelled?
# flights cancelled
jfc <- COflights %>%
filter(MONTH == 7, !is.na(CANCELLED), CANCELLED == 1) %>%
summarize(total = n())
# total flights
total_jan <- COflights %>%
filter(MONTH == 7, !is.na(CANCELLED)) %>%
summarize(total = n())
jfc/total_jan
### what probability is there that January flights are cancelled?
# flights cancelled
jfc <- COflights %>%
filter(MONTH == 8, !is.na(CANCELLED), CANCELLED == 1) %>%
summarize(total = n())
# total flights
total_jan <- COflights %>%
filter(MONTH == 8, !is.na(CANCELLED)) %>%
summarize(total = n())
jfc/total_jan
### what probability is there that January flights are cancelled?
# flights cancelled
jfc <- COflights %>%
filter(MONTH == 8, !is.na(CANCELLED), CANCELLED == 1) %>%
summarize(total = n())
### what probability is there that January flights are cancelled?
# flights cancelled
jfc <- COflights %>%
filter(MONTH == 9, !is.na(CANCELLED), CANCELLED == 1) %>%
summarize(total = n())
# total flights
total_jan <- COflights %>%
filter(MONTH == 9, !is.na(CANCELLED)) %>%
summarize(total = n())
jfc/total_jan
### what probability is there that January flights are cancelled?
# flights cancelled
jfc <- COflights %>%
filter(MONTH == 10, !is.na(CANCELLED), CANCELLED == 1) %>%
summarize(total = n())
# total flights
total_jan <- COflights %>%
filter(MONTH == 10, !is.na(CANCELLED)) %>%
summarize(total = n())
jfc/total_jan
### what probability is there that January flights are cancelled?
# flights cancelled
jfc <- COflights %>%
filter(MONTH == 11, !is.na(CANCELLED), CANCELLED == 1) %>%
summarize(total = n())
# total flights
total_jan <- COflights %>%
filter(MONTH == 11, !is.na(CANCELLED)) %>%
summarize(total = n())
jfc/total_jan
### what probability is there that January flights are cancelled?
# flights cancelled
jfc <- COflights %>%
filter(MONTH == 12, !is.na(CANCELLED), CANCELLED == 1) %>%
summarize(total = n())
# total flights
total_jan <- COflights %>%
filter(MONTH == 12, !is.na(CANCELLED)) %>%
summarize(total = n())
jfc/total_jan
### what probability is there that January flights are cancelled?
# flights cancelled
jfc <- COflights %>%
filter(MONTH == 1, !is.na(CANCELLED), CANCELLED == 1) %>%
summarize(total = n())
# total flights
total_jan <- COflights %>%
filter(MONTH == 1, !is.na(CANCELLED)) %>%
summarize(total = n())
jfc/total_jan
